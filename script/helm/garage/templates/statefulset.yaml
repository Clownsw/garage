apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "garage.fullname" . }}
  labels:
    {{- include "garage.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "garage.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "garage.fullname" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "garage.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "garage.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        # Copies garage.toml from configmap to temporary etc volume and replaces RPC secret placeholder
        - name: {{ .Chart.Name }}-init
          image: busybox:1.28
          command: ["sh", "-c", "sed \"s/__RPC_SECRET_REPLACE__/$RPC_SECRET/\" /mnt/garage.toml > /mnt/etc/garage.toml"]
          env:
            - name: RPC_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "garage.rpcSecretName" . }}
                  key: rpcSecret
          volumeMounts:
            - name: configmap
              mountPath: /mnt/garage.toml
              subPath: garage.toml
            - name: etc
              mountPath: /mnt/etc
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 3900
              name: s3-api
            - containerPort: 3902
              name: web-api
          volumeMounts:
            - name: meta
              mountPath: /mnt/meta
            - name: data
              mountPath: /mnt/data
            - name: etc
              mountPath: /etc/garage.toml
              subPath: garage.toml
          # TODO
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: 3900
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: 3900
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: configmap
          configMap:
            name: {{ include "garage.fullname" . }}-config
        - name: etc
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: meta
    spec:
      accessModes: [ "ReadWriteOnce" ]
    {{- if hasKey .Values.persistence.meta "storageClass" }}
      storageClassName: {{ .Values.persistence.meta.storageClass | quote }}
    {{- end }}
      resources:
        requests:
          storage: {{ .Values.persistence.meta.size | quote }}
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
    {{- if hasKey .Values.persistence.data "storageClass" }}
      storageClassName: {{ .Values.persistence.data.storageClass | quote }}
    {{- end }}
      resources:
        requests:
          storage: {{ .Values.persistence.data.size | quote }}
  {{- end }}
